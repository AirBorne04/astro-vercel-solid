---

 const submitForm = async <
	Body extends {} = {},
	ErrorData extends {} = {}
>(
	element: HTMLFormElement,
	handleRedirect: (location: string) => void = (location) =>
		(window.location.href = location)
) => {


	const formData = new FormData(element);
	const response = await fetch(element.action, {
		method: element.method,
		body: formData,
		headers: {
			accept: "application/json"
		}
	});
	const result = (await response.json());
	if (result.type === "redirect") {
		handleRedirect(result.redirect_location);
	}
	return result;
};


const clonedRequest = Astro.request.clone();
await clonedRequest.arrayBuffer();
new URL(clonedRequest.url);
const textEncoder = new TextEncoder();
const uint8array = textEncoder.encode("hello");
const textDecoder = new TextDecoder();
console.log(textDecoder.decode(uint8array));
const blob = new Blob([uint8array]);
console.log(textDecoder.decode(await blob.arrayBuffer()));
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <h1>Hello</h1>
  </body>
</html>
